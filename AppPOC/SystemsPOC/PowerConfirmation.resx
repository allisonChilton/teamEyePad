<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zJv3b4xopOzzbrJEAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>