<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="alarmBut.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Aqed9n+AmKj+HM71MwAAAABJRU5ErkJggg==
</value>
  </data>
</root>