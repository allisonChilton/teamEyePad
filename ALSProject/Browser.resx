<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="alsAlarm1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>