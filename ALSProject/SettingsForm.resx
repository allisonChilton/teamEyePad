<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAlarm.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>